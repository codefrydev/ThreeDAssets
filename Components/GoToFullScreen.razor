@if (_isFullScreen)
{
    <button type="button" 
            class="absolute top-4 right-4 z-10 p-3 bg-theme-primary border border-theme-primary rounded-full shadow-theme-lg hover:bg-theme-secondary hover:shadow-theme-xl transition-all duration-200 group" 
            @onclick="GoExit"
            title="Exit Full Screen">
        <svg class="w-6 h-6 text-theme-primary group-hover:text-theme-accent transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
    </button>
}
else
{
    <button type="button" 
            class="absolute top-4 right-4 z-10 p-3 bg-theme-primary border border-theme-primary rounded-full shadow-theme-lg hover:bg-theme-secondary hover:shadow-theme-xl transition-all duration-200 group" 
            @onclick="GoFull"
            title="Enter Full Screen">
        <svg class="w-6 h-6 text-theme-primary group-hover:text-theme-accent transition-colors duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"></path>
        </svg>
    </button>
}

<script>
    window.openFullScreen = (elementId) => {
        const elem = document.getElementById(elementId);
        if (elem.requestFullscreen) {
            elem.requestFullscreen();
        } else if (elem.webkitRequestFullscreen) {
            elem.webkitRequestFullscreen();
        } else if (elem.msRequestFullscreen) {
            elem.msRequestFullscreen();
        }
    };

    window.closeFullScreen = () => {
        if (document.exitFullscreen) {
            document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
            document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
            document.msExitFullscreen();
        }
    };

    window.registerFullScreenCallback = (dotnetHelper, elementId) => {
        document.addEventListener("fullscreenchange", () => {
            const isFull = document.fullscreenElement?.id === elementId;
            dotnetHelper.invokeMethodAsync("SetFullScreenState", isFull);
        });
    };
</script>